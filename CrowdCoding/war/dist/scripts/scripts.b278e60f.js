"use strict";if(void 0===projectId)var projectId="allTogetherDraw";angular.module("crowdAdminApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","mgcrea.ngStrap","firebase","nvd3","ui.ace","mgcrea.ngStrap"]).config(["$routeProvider",function(a){a.when("/dashboard",{templateUrl:"/dist//dist/dashboard/dashboard.html",controller:"DashboardCtrl"}).when("/microtasks",{templateUrl:"/dist//dist/microtasks/microtasks.html",controller:"MicrotasksCtrl"}).when("/functions",{templateUrl:"/dist//dist/functions/functions.html",controller:"FunctionsCtrl"}).when("/feedback",{templateUrl:"/dist//dist/feedback/feedback.html",controller:"FeedbackCtrl"}).when("/chat",{templateUrl:"/dist//dist/chat/chat.html",controller:"ChatCtrl"}).when("/code",{templateUrl:"/dist//dist/code/code.html",controller:"CodeCtrl"}).otherwise({redirectTo:"/dashboard"})}]).run(["$rootScope","Microtasks","events",function(a,b,c){console.log("APP: Initializing App"),console.log("APP: Quering the events for the first batch..."),b.$loaded().then(function(){var a=c.init();a.then(function(a){b.handleEvents(a),console.log(b.getStats()),console.log("APP: stats ready: "+b.getStatsReady())})}),a.time=(new Date).getTime()}]).constant("firebaseUrl","https://crowdcode.firebaseio.com/projects/"+projectId),angular.module("crowdAdminApp").controller("DashboardCtrl",["$scope","Microtasks",function(a,b){a.pieConfig={visible:!0,extended:!1,disabled:!1,autorefresh:!0,refreshDataOnly:!1},a.numCompletedPie={chart:{type:"pieChart",height:300,x:function(a){return a.label},y:function(a){return a.value},showLabels:!0,labelType:"percent",showLegend:!1,transitionDuration:500,valueFormat:function(a){return parseInt(a)}},title:{enable:!0,text:"Finished by type"}},a.totalTimePie={chart:{type:"pieChart",height:300,x:function(a){return a.label},y:function(a){return a.value},showLabels:!0,labelType:"percent",showLegend:!1,transitionDuration:500,valueFormat:function(a){return $filter("amountOfTime")(a)}},title:{enable:!0,text:"Total worktime by type"}},a.totalTimeData=[],a.numCompletedData=[],a.microtasks=b,a.loading=!0,a.$watch("microtasks.getStatsReady() ",function(){a.microtasks.getStatsReady()&&(a.stats=a.microtasks.getStats(),a.numCompletedData=function(){var b=[];return angular.forEach(a.stats.finishByType,function(a,c){b.push({label:c,value:a.numFinished})}),b},a.totalTimeData=function(){var b=[];return angular.forEach(a.stats.finishByType,function(a,c){b.push({label:c,value:a.totalTime})}),b},a.loading=!1)})}]),angular.module("crowdAdminApp").factory("Microtask",["$firebaseUtils",function(a){function b(a){this.$id=a.key(),this.update(a.val()),this.events=[],this.setStatus("none")}return b.prototype={update:function(a){var b=angular.extend({},this.data);return this.data=a,!angular.equals(this.data,b)},getStatus:function(){return this.status},setStatus:function(a){this.status=a},addEvent:function(a){this.events.push(a)},updateStats2:function(a){a.hasOwnProperty("numFinished")||(a.numFinished=0,a.avgFinishTime=0,a.totalTime=0,a.finishByType={}),["completed","accepted","rejected","reissued"].indexOf(this.status)||a.numFinished++},updateStats:function(a){a.hasOwnProperty("numFinished")||(a.numFinished=0,a.avgFinishTime=0,a.totalTime=0,a.finishByType={}),a.hasOwnProperty(this.status)?a[this.status]++:a[this.status]=1;this.events[this.events.length-1];-1==["completed","in_review"].indexOf(this.status)||isNaN(this.completedIn)||(a.avgFinishTime=(a.avgFinishTime*a.numFinished+this.completedIn)/(a.numFinished+1),a.numFinished++,a.totalTime+=this.completedIn,a.finishByType.hasOwnProperty(this.data.type)?(a.finishByType[this.data.type].avgFinishTime=(a.finishByType[this.data.type].avgFinishTime*a.finishByType[this.data.type].numFinished+this.completedIn)/(a.finishByType[this.data.type].numFinished+1),a.finishByType[this.data.type].numFinished++,a.finishByType[this.data.type].totalTime+=this.completedIn):a.finishByType[this.data.type]={numFinished:1,avgFinishTime:this.completedIn,totalTime:this.completedIn})},handleEvent:function(a,b){if(a.microtaskID==this.data.id){switch(a.eventType){case"microtask.spawned":this.spawnedAt=a.timeInMillis,this.setStatus("spawned");break;case"microtask.assigned":this.assignedAt=a.timeInMillis,this.setStatus("assigned");break;case"microtask.skipped":this.setStatus("skipped"),this.assignedAt="";break;case"microtask.submitted":this.completedAt=a.timeInMillis,this.completedIn=this.completedAt-this.assignedAt,this.setStatus(-1!=["Review","DebugTestFailure","ReuseSearch"].indexOf(this.data.type)?"completed":"in_review");break;case"microtask.accepted":this.setStatus("accepted");break;case"microtask.rejected":this.setStatus("rejected");break;case"microtask.reissued":this.setStatus("reissued")}this.updateStats(b),this.addEvent(a)}},toJSON:function(){return a.toJSON(this.data)}},b}]).factory("MicrotaskFactory",["$FirebaseArray","Microtask",function(a,b){var c=!1;return a.$extendFactory({stats:{},statsReady:!1,handleEvents:function(a){var b=this;void 0==b&&(b.stats={}),c=!1,angular.forEach(a,function(a,c){if(void 0!=a.microtaskID&&void 0!=a.artifactID){var c=a.artifactID+"-"+a.microtaskID,d=b.$getRecord(c);null!=d&&d.handleEvent(a,b.stats)}}),b.statsReady=!0},getStats:function(){return this.stats},getStatsReady:function(){return this.statsReady},$$added:function(a){return new b(a)},$$updated:function(a){var b=this.$list.$getRecord(a.key());return b.update(a.val())}})}]).service("Microtasks",["$firebase","$filter","MicrotaskFactory","events",function(a,b,c){var d=null;if(null==d){console.log("loading mtasks");var e=new Firebase("https://crowdcode.firebaseio.com/projects/allTogetherDraw/microtasks");console.log("https://crowdcode.firebaseio.com/projects/allTogetherDraw/history/microtasks");var f=a(e,{arrayFactory:c}),d=f.$asArray()}else console.log("mtasks already laoded");return d}]),angular.module("crowdAdminApp").service("events",["$firebase","$filter","$q","firebaseUrl",function(a,b,c,d){console.log(d+"/history/events");var e=new Firebase(d+"/history/events"),f=[],g={init:function(){{var a=c.defer();(new Date).getTime()}return e.once("value",function(b){b.forEach(function(a){var b=a.val();for(var c in f)f.hasOwnProperty(c)&&f[c].call(null,b)}),a.resolve(b.exportVal())}),a.promise},get:function(){var a=c.defer(),b=e.limitToFirst(2e3);return b.on("value",function(b){return a.resolve(b.exportVal())}),a.promise},addListener:function(a,b){f[b]=a},removeListener:function(a){f.hasOwnProperty(a)&&delete f.key}};return g}]),angular.module("crowdAdminApp").service("Functions",["$FirebaseArray","$firebase","firebaseUrl",function(a,b,c){var d=new Firebase(c+"/artifacts/functions"),e=new Firebase(c+"/history/artifacts/functions"),f=b(d),g=f.$asArray(),h={all:function(){return g},filter:function(a){return $filter("filter")(g,a)},get:function(a,c){if(void 0===c)return g.$getRecord(a);var d=b(e.child(a).child(c));return d.$asObject()}};return h}]),angular.module("crowdAdminApp").controller("EventsCtrl",["$scope","events","microtasks",function(a,b){a.events=b.all(),a.categories=[{value:"",label:"all"},{value:"microtask",label:"microtask events"},{value:"artifact",label:"artifact events"}]}]).directive("eventDetail",["$compile",function(a){return{restrict:"E",scope:{data:"="},template:"detail",link:function(b,c){var d=b.data.eventType.split(".");if("microtask"==d[0])switch(d[1]){case"spawned":c.html("A <strong>{{data.microtaskType}}</strong>  microtask has been spawned");break;case"submitted":c.html("A <strong>{{data.microtaskType}}</strong> microtask has been submitted");break;case"skipped":c.html("A <strong>{{data.microtaskType}}</strong> microtask has been skipped")}else"artifact"==d[0]&&c.html("A change on property <strong>{{data.propertyName}}</strong> of artifact {{data.artifactName}}");a(c.contents())(b)}}}]),angular.module("crowdAdminApp").filter("amountOfTime",function(){return function(a){var b=36e5,c=6e4,d=1e3,e=Math.floor(a/b),f=Math.round((a-e*b)/c),g=Math.round((a-e*b-f*c)/d);return 60===g&&(f++,g=0),60===f&&(e++,f=0),e+" hours, "+f+" minutes"}}).directive("microtaskDetails",["$modal","Microtasks","Functions",function(a,b,c){var d={WriteFunction:function(){},WriteTestCases:function(){},ReuseSearch:function(){},WriteTest:function(a){c.all().$loaded().then(function(){a.function=c.get(a.task.data.functionID,a.task.data.submission.functionVersion)})},WriteFunctionDescription:function(){},WriteCall:function(){},DebugTestFailure:function(){},Review:function(){}};return{scope:{mtask:"=microtaskDetails"},link:function(c,e){var f=a({placement:"center",scope:c,animation:"am-fade-and-scale",template:"/microtasks/microtaskDetails.html",show:!1});b.$loaded().then(function(){c.task="Review"==c.mtask.data.type?b.$getRecord(c.mtask.data.microtaskKeyUnderReview):c.mtask,e.on("click",function(){d[c.task.data.type](c),f.$promise.then(f.show)})}),c.aceLoaded=function(a){a.setOptions({maxLines:1/0})}}}}]).controller("MicrotasksCtrl",["$scope","$filter","Microtasks",function(a,b,c){a.types=[{value:"ReuseSearch",label:"reuse search"},{value:"Review",label:"review"},{value:"WriteCall",label:"write call"},{value:"WriteFunction",label:"write function"},{value:"WriteFunctionDescription",label:"write function description"},{value:"WriteTest",label:"write test"},{value:"WriteTestCases",label:"write test cases"},{value:"DebugTestFailure",label:"debug test failure"}],a.status=[{value:"spawned",label:"spawned"},{value:"assigned",label:"assigned"},{value:"skipped",label:"skipped"},{value:"in review",label:"in review"},{value:"accepted",label:"accepted"},{value:"rejected",label:"rejected"},{value:"reissued",label:"reissued"}],a.resetFilter=function(){a.selectedTypes=[],a.selectedArtifacts=[],a.selectedStatus=[]},a.resetSort=function(){a.sort={column:"data.id",descending:!1}},a.changeSorting=function(b){var c=a.sort;c.column==b?c.descending=!c.descending:(c.column=b,c.descending=!1)},a.resetFilter(),a.resetSort(),a.microtasks=c,a.loading=!0,a.$watch("microtasks.getStatsReady()",function(){a.microtasks.getStatsReady&&(a.stats=a.microtasks.getStats(),a.loading=!1)}),a.filter=!1,a.microtasks.$loaded().then(function(){a.$watch("selectedTypes + selectedArtifacts + selectedStatus",function(){0==a.selectedTypes.length&&0==a.selectedArtifacts.length&&0==a.selectedStatus.length?(a.filter=!1,console.log("filter is off")):(a.filterStats={},a.filterMicrotasks=b("filter")(c,function(b){return 0!=a.selectedTypes.length&&-1==a.selectedTypes.indexOf(b.data.type)||0!=a.selectedArtifacts.length&&-1==a.selectedArtifacts.indexOf(b.data.owningArtifact)||0!=a.selectedStatus.length&&-1==a.selectedStatus.indexOf(b.status)?!1:(b.updateStats(a.filterStats),!0)}),a.filter=!0,console.log("filter is on"))})})}]),angular.module("crowdAdminApp").controller("FunctionsCtrl",["$scope","functions",function(a,b){a.functions=b.all(),a.types=[{value:"",label:"all"}]}]).directive("functionDetail",["$compile","events","microtasks",function(a,b){return{restrict:"E",scope:{data:"="},template:'<ul><li ng-repeat="event in events">{{event.eventType}}</li></ul>',link:function(a){a.events=b.byArtifact(a.data)}}}]),angular.module("crowdAdminApp").controller("FeedbackCtrl",["$scope","$firebase","firebaseUrl",function(a,b,c){var d=b(new Firebase(c+"/feedback"));a.feedbacks=d.$asArray()}]),angular.module("crowdAdminApp").controller("ChatCtrl",["$scope","$firebase","firebaseUrl",function(a,b,c){var d=b(new Firebase(c+"/chat"));a.chat=d.$asArray()}]),angular.module("crowdAdminApp").controller("CodeCtrl",["$scope",function(a){a.allCode="";var b=new Firebase("https://crowdcode.firebaseio.com/projects/allTogetherDraw/artifacts/functions");b.on("value",function(b){a.allCode="";for(var c in b.val()){var d=b.val()[c];a.allCode+=d.header+" "+d.code+" \n"}})}]),angular.module("crowdAdminApp").directive("microtaskRow",["$compile","$timeout","events",function(){return{restrict:"A",replace:!0,require:"ngModel",templateUrl:"/dist//dist//microtasks/microtaskRowDirective.html",link:function(a){a.status="",a.status=a.mtask.assigned?a.mtask.completed?"completed":"assigned":"created"}}}]),angular.module("crowdAdminApp").directive("functionMicrotasks",["$compile","events","microtasks",function(a,b,c){return{restrict:"E",scope:{data:"="},templateUrl:"/dist//dist//functions/functionMicrotaskDirective.html",link:function(a){console.log("function mtasks"),a.mtasks=c.byFunction(a.data)}}}]),angular.module("crowdAdminApp").directive("rowDetails",["$compile",function(a){return{restrict:"A",scope:{data:"="},link:function(b,c){var d=angular.element('<tr><td><function-microtasks data="data"></function-microtasks></td></tr>'),e=!1;c.on("click",function(){e=!e,e?(d.insertAfter(c),a(d)(b)):d.remove()})}}}]);